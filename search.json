[
  {
    "objectID": "new_staff/page3.html",
    "href": "new_staff/page3.html",
    "title": "Page Title Here",
    "section": "",
    "text": "The headers below cause the table of contents/dropdown on the right to be visible.",
    "crumbs": [
      "Home",
      "Staff Onboarding",
      "TOPIC2 Page3 Title"
    ]
  },
  {
    "objectID": "new_staff/page3.html#level-two",
    "href": "new_staff/page3.html#level-two",
    "title": "Page Title Here",
    "section": "Level Two",
    "text": "Level Two\n\nL3\n\n\nL3 Again\n\n\nAnd one more time",
    "crumbs": [
      "Home",
      "Staff Onboarding",
      "TOPIC2 Page3 Title"
    ]
  },
  {
    "objectID": "new_staff/page3.html#another-level-two",
    "href": "new_staff/page3.html#another-level-two",
    "title": "Page Title Here",
    "section": "Another Level Two",
    "text": "Another Level Two",
    "crumbs": [
      "Home",
      "Staff Onboarding",
      "TOPIC2 Page3 Title"
    ]
  },
  {
    "objectID": "new_staff/page3.html#level-two-1",
    "href": "new_staff/page3.html#level-two-1",
    "title": "Page Title Here",
    "section": "Level Two",
    "text": "Level Two",
    "crumbs": [
      "Home",
      "Staff Onboarding",
      "TOPIC2 Page3 Title"
    ]
  },
  {
    "objectID": "new_staff/page1.html",
    "href": "new_staff/page1.html",
    "title": "Page Title Here",
    "section": "",
    "text": "The headers below cause the table of contents/dropdown on the right to be visible.",
    "crumbs": [
      "Home",
      "Staff Onboarding",
      "TOPIC2 Page1 Title"
    ]
  },
  {
    "objectID": "new_staff/page1.html#level-two",
    "href": "new_staff/page1.html#level-two",
    "title": "Page Title Here",
    "section": "Level Two",
    "text": "Level Two\n\nL3\n\n\nL3 Again\n\n\nAnd one more time",
    "crumbs": [
      "Home",
      "Staff Onboarding",
      "TOPIC2 Page1 Title"
    ]
  },
  {
    "objectID": "new_staff/page1.html#another-level-two",
    "href": "new_staff/page1.html#another-level-two",
    "title": "Page Title Here",
    "section": "Another Level Two",
    "text": "Another Level Two",
    "crumbs": [
      "Home",
      "Staff Onboarding",
      "TOPIC2 Page1 Title"
    ]
  },
  {
    "objectID": "new_staff/page1.html#level-two-1",
    "href": "new_staff/page1.html#level-two-1",
    "title": "Page Title Here",
    "section": "Level Two",
    "text": "Level Two",
    "crumbs": [
      "Home",
      "Staff Onboarding",
      "TOPIC2 Page1 Title"
    ]
  },
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "Creative Commons Attribution-ShareAlike 4.0 International",
    "section": "",
    "text": "Creative Commons Corporation (“Creative Commons”) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an “as-is” basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible.\nUsing Creative Commons Public Licenses\nCreative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses.\n\nConsiderations for licensors: Our public licenses are intended for use by those authorized to give the public permission to use material in ways otherwise restricted by copyright and certain other rights. Our licenses are irrevocable. Licensors should read and understand the terms and conditions of the license they choose before applying it. Licensors should also secure all rights necessary before applying our licenses so that the public can reuse the material as expected. Licensors should clearly mark any material not subject to the license. This includes other CC-licensed material, or material used under an exception or limitation to copyright. More considerations for licensors.\nConsiderations for the public: By using one of our public licenses, a licensor grants the public permission to use the licensed material under specified terms and conditions. If the licensor’s permission is not necessary for any reason–for example, because of any applicable exception or limitation to copyright–then that use is not regulated by the license. Our licenses grant only permissions under copyright and certain other rights that a licensor has authority to grant. Use of the licensed material may still be restricted for other reasons, including because others have copyright or other rights in the material. A licensor may make special requests, such as asking that all changes be marked or described. Although not required by our licenses, you are encouraged to respect those requests where reasonable. More considerations for the public.\n\n\n\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-ShareAlike 4.0 International Public License (“Public License”). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\n\n\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter’s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nBY-SA Compatible License means a license listed at creativecommons.org/compatiblelicenses, approved by Creative Commons as essentially the equivalent of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicense Elements means the license attributes listed in the name of a Creative Commons Public License. The License Elements of this Public License are Attribution and ShareAlike.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\n\n\n\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\nA. reproduce and Share the Licensed Material, in whole or in part; and\nB. produce, reproduce, and Share Adapted Material.\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)(4) never produces Adapted Material.\nDownstream recipients.\nA. Offer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nB. Additional offer from the Licensor – Adapted Material. Every recipient of Adapted Material from You automatically receives an offer from the Licensor to exercise the Licensed Rights in the Adapted Material under the conditions of the Adapter’s License You apply.\nC. No downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\n\n\n\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\nA. retain the following if it is supplied by the Licensor with the Licensed Material:\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\nB. indicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nC. indicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\n\nShareAlike.\n\nIn addition to the conditions in Section 3(a), if You Share Adapted Material You produce, the following conditions also apply.\n\nThe Adapter’s License You apply must be a Creative Commons license with the same License Elements, this version or later, or a BY-SA Compatible License.\nYou must include the text of, or the URI or hyperlink to, the Adapter’s License You apply. You may satisfy this condition in any reasonable manner based on the medium, means, and context in which You Share Adapted Material.\nYou may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, Adapted Material that restrict exercise of the rights granted under the Adapter’s License You apply.\n\n\n\n\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material, including for purposes of Section 3(b); and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\n\n\n\n\nUnless otherwise separately undertaken by the Licensor, to the extent possible, the Licensor offers the Licensed Material as-is and as-available, and makes no representations or warranties of any kind concerning the Licensed Material, whether express, implied, statutory, or other. This includes, without limitation, warranties of title, merchantability, fitness for a particular purpose, non-infringement, absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not known or discoverable. Where disclaimers of warranties are not allowed in full or in part, this disclaimer may not apply to You.\nTo the extent possible, in no event will the Licensor be liable to You on any legal theory (including, without limitation, negligence) or otherwise for any direct, special, indirect, incidental, consequential, punitive, exemplary, or other losses, costs, expenses, or damages arising out of this Public License or use of the Licensed Material, even if the Licensor has been advised of the possibility of such losses, costs, expenses, or damages. Where a limitation of liability is not allowed in full or in part, this limitation may not apply to You.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\n\n\n\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\n\n\n\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.\n\n\n\n\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org."
  },
  {
    "objectID": "LICENSE.html#creative-commons-attribution-sharealike-4.0-international-public-license",
    "href": "LICENSE.html#creative-commons-attribution-sharealike-4.0-international-public-license",
    "title": "Creative Commons Attribution-ShareAlike 4.0 International",
    "section": "",
    "text": "By exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-ShareAlike 4.0 International Public License (“Public License”). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\n\n\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter’s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nBY-SA Compatible License means a license listed at creativecommons.org/compatiblelicenses, approved by Creative Commons as essentially the equivalent of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicense Elements means the license attributes listed in the name of a Creative Commons Public License. The License Elements of this Public License are Attribution and ShareAlike.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\n\n\n\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\nA. reproduce and Share the Licensed Material, in whole or in part; and\nB. produce, reproduce, and Share Adapted Material.\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)(4) never produces Adapted Material.\nDownstream recipients.\nA. Offer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nB. Additional offer from the Licensor – Adapted Material. Every recipient of Adapted Material from You automatically receives an offer from the Licensor to exercise the Licensed Rights in the Adapted Material under the conditions of the Adapter’s License You apply.\nC. No downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\n\n\n\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\nA. retain the following if it is supplied by the Licensor with the Licensed Material:\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\nB. indicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nC. indicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\n\nShareAlike.\n\nIn addition to the conditions in Section 3(a), if You Share Adapted Material You produce, the following conditions also apply.\n\nThe Adapter’s License You apply must be a Creative Commons license with the same License Elements, this version or later, or a BY-SA Compatible License.\nYou must include the text of, or the URI or hyperlink to, the Adapter’s License You apply. You may satisfy this condition in any reasonable manner based on the medium, means, and context in which You Share Adapted Material.\nYou may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, Adapted Material that restrict exercise of the rights granted under the Adapter’s License You apply.\n\n\n\n\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material, including for purposes of Section 3(b); and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\n\n\n\n\nUnless otherwise separately undertaken by the Licensor, to the extent possible, the Licensor offers the Licensed Material as-is and as-available, and makes no representations or warranties of any kind concerning the Licensed Material, whether express, implied, statutory, or other. This includes, without limitation, warranties of title, merchantability, fitness for a particular purpose, non-infringement, absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not known or discoverable. Where disclaimers of warranties are not allowed in full or in part, this disclaimer may not apply to You.\nTo the extent possible, in no event will the Licensor be liable to You on any legal theory (including, without limitation, negligence) or otherwise for any direct, special, indirect, incidental, consequential, punitive, exemplary, or other losses, costs, expenses, or damages arising out of this Public License or use of the Licensed Material, even if the Licensor has been advised of the possibility of such losses, costs, expenses, or damages. Where a limitation of liability is not allowed in full or in part, this limitation may not apply to You.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\n\n\n\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\n\n\n\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.\n\n\n\n\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org."
  },
  {
    "objectID": "github/lmu_osc_github_org_overview.html",
    "href": "github/lmu_osc_github_org_overview.html",
    "title": "Page Title Here",
    "section": "",
    "text": "The headers below cause the table of contents/dropdown on the right to be visible.",
    "crumbs": [
      "Home",
      "GitHub Organization",
      "LMU OSC GitHub Org Overview"
    ]
  },
  {
    "objectID": "github/lmu_osc_github_org_overview.html#level-two",
    "href": "github/lmu_osc_github_org_overview.html#level-two",
    "title": "Page Title Here",
    "section": "Level Two",
    "text": "Level Two\n\nL3\n\n\nL3 Again\n\n\nAnd one more time",
    "crumbs": [
      "Home",
      "GitHub Organization",
      "LMU OSC GitHub Org Overview"
    ]
  },
  {
    "objectID": "github/lmu_osc_github_org_overview.html#another-level-two",
    "href": "github/lmu_osc_github_org_overview.html#another-level-two",
    "title": "Page Title Here",
    "section": "Another Level Two",
    "text": "Another Level Two",
    "crumbs": [
      "Home",
      "GitHub Organization",
      "LMU OSC GitHub Org Overview"
    ]
  },
  {
    "objectID": "github/lmu_osc_github_org_overview.html#level-two-1",
    "href": "github/lmu_osc_github_org_overview.html#level-two-1",
    "title": "Page Title Here",
    "section": "Level Two",
    "text": "Level Two",
    "crumbs": [
      "Home",
      "GitHub Organization",
      "LMU OSC GitHub Org Overview"
    ]
  },
  {
    "objectID": "github/projects.html",
    "href": "github/projects.html",
    "title": "GitHub Projects Feature",
    "section": "",
    "text": "Certainly! Here’s a comprehensive write-up on GitHub Projects, including its features and how to effectively use it for project management:",
    "crumbs": [
      "Home",
      "GitHub Organization",
      "Projects Overview"
    ]
  },
  {
    "objectID": "github/projects.html#key-features-of-github-projects",
    "href": "github/projects.html#key-features-of-github-projects",
    "title": "GitHub Projects Feature",
    "section": "Key Features of GitHub Projects",
    "text": "Key Features of GitHub Projects\n\nBoards:\n\nGitHub Projects uses a Kanban-style board, where tasks are organized into columns. These columns are customizable and can be used to represent various stages of your workflow, such as “To Do,” “In Progress,” and “Done.”\nCards (which represent tasks or issues) can be moved between columns as they progress. Cards can represent issues, pull requests, or even notes.\n\nCustomizable Workflow:\n\nYou can create custom columns and workflows that match the needs of your team or project. For example, you might want columns for “Backlog,” “In Review,” or “Testing” depending on your development process.\nYou can also add automations to simplify tasks. For instance, when an issue is closed, it can automatically be moved to the “Done” column.\n\nIssue and Pull Request Integration:\n\nProjects are tightly integrated with GitHub issues and pull requests. When creating a card in the project board, you can link it to an issue or PR to track specific tasks.\nThis integration ensures that all the work being tracked on the project board is directly related to the work being done in the repository. For example, when a pull request is merged, the associated issue or card can be moved automatically to the “Done” column.\n\nFilters and Views:\n\nGitHub Projects allows you to filter cards based on specific criteria, such as labels, assignees, or milestones. This makes it easy to focus on a particular subset of tasks.\nAdditionally, you can create multiple views within a single project board, so different teams can have tailored perspectives on the same project, showing only the tasks relevant to their needs.\n\nRoadmaps and Milestones:\n\nYou can associate issues with milestones and use GitHub Projects to create a roadmap. A milestone represents a specific goal or deliverable in the project (such as a version release or feature completion).\nThis helps track progress toward major objectives and gives everyone involved a clear view of the project’s timeline and milestones.\n\nCollaboration Features:\n\nAs with other GitHub tools, collaboration is built-in. Team members can comment on issues and pull requests, and the board serves as a centralized place to coordinate the development process. You can assign team members to tasks, track their progress, and make sure everyone knows what needs to be done.\n\nNotifications and Activity Feed:\n\nGitHub Projects includes an activity feed to show updates to your project. You can see when issues are created, cards are moved, and PRs are merged.\nYou’ll also receive notifications about changes, so you stay informed about updates and progress on tasks you’re assigned to or watching.",
    "crumbs": [
      "Home",
      "GitHub Organization",
      "Projects Overview"
    ]
  },
  {
    "objectID": "github/projects.html#how-to-use-github-projects-effectively",
    "href": "github/projects.html#how-to-use-github-projects-effectively",
    "title": "GitHub Projects Feature",
    "section": "How to Use GitHub Projects Effectively",
    "text": "How to Use GitHub Projects Effectively\n\nSetting Up a Project Board\n\nCreate a New Project: Start by creating a new project within your repository or organization. You can either choose one of the GitHub templates, create your own, or use one of the OSC templates (if you have admin access). Different project templates have different workflow (i.e. column) set-ups.\n\nAdding Issues and Pull Requests\n\nAdd Existing Issues: Link any open issues or pull requests to the board by creating a card. This keeps track of ongoing work. You can assign issues to team members and label them (e.g., bug, enhancement, documentation) to categorize tasks.\nCreate New Issues: For new tasks or bugs, create new issues directly from the project board. You can create Draft issues, however, they are just as a basic text board that doesn’t allow e.g. commenting. You should aim to create proper issues and associate them to the relevant repo.\nIf the issue or task you have in mind is more of a “meta” task, it is a task that needs to applied to many repos, or otherwise doesn’t fit neatly to a single repo, then you should assign it to the lmu-osc-tasks repo.\nTrack Pull Requests: Link pull requests to cards on the board, and use the PRs to track code changes that are part of the larger task. When a PR is merged, the associated task can be moved to the “Done” column.\n\nUsing Labels and Milestones for Organization\n\nUse labels to categorize and prioritize tasks. For example, you might use labels like “high priority,” “low priority,” or “waiting for review.” This will help you filter and find issues more easily.\nMilestones can help you keep track of important project deadlines or releases. Link issues and pull requests to milestones, and use the project board to see the progress toward those milestones.\n\nTracking Progress with Views and Filters\n\nSet up multiple views if different team members or stakeholders need different perspectives on the project. For example, the development team might focus on tasks labeled “bug” or “feature,” while the product team might focus on tasks associated with milestones.\nUse filters to narrow down the board based on labels, assignees, or due dates to focus on relevant tasks.\n\nCollaborating with Team Members\n\nUse comments and mentions on issues and pull requests to communicate with team members. This keeps discussions focused on specific tasks and ensures that everyone stays informed.\nIf someone is assigned to a task, they will receive notifications when updates or changes occur, ensuring that they’re aware of progress and required actions.\n\nAutomating Workflows\n\nGitHub Projects can automate parts of your workflow. For example, you can set rules to automatically move cards when an issue is closed or a pull request is merged.\nGitHub Actions can be used to further automate tasks within the project board. For example, you can create workflows that update project boards when a PR is merged or an issue is tagged with a particular label.\n\nPeriodic Review and Updates\n\nRegularly review your project board to make sure tasks are still relevant, and ensure that everyone is aligned on priorities.\nUse the activity feed to monitor recent changes to the project board and ensure that no tasks or discussions are overlooked.",
    "crumbs": [
      "Home",
      "GitHub Organization",
      "Projects Overview"
    ]
  },
  {
    "objectID": "github/projects.html#best-practices-for-using-github-projects",
    "href": "github/projects.html#best-practices-for-using-github-projects",
    "title": "GitHub Projects Feature",
    "section": "Best Practices for Using GitHub Projects",
    "text": "Best Practices for Using GitHub Projects\n\nKeep the Board Updated: Ensure that the board is regularly updated to reflect the current state of work. Move tasks through the workflow as they progress, and make sure everyone has visibility into which tasks are blocked, in progress, or completed.\nUse Templates for Consistency: If you have recurring tasks (such as new feature requests or bug fixes), create issue and project templates to streamline the process and maintain consistency across different tasks.\nKeep Columns Focused: Avoid creating too many columns that make the board overwhelming. Instead, focus on the critical stages of your development process.\nRegular Standups and Reviews: Use the project board in your team’s regular standup or sprint reviews to quickly assess progress and discuss blockers.\nProvide Clear Task Descriptions: Ensure that every issue or PR linked to the board has clear and concise descriptions. This will help team members quickly understand the task at hand and reduce confusion.",
    "crumbs": [
      "Home",
      "GitHub Organization",
      "Projects Overview"
    ]
  },
  {
    "objectID": "github/projects.html#creating-new-projects",
    "href": "github/projects.html#creating-new-projects",
    "title": "GitHub Projects Feature",
    "section": "Creating New Projects",
    "text": "Creating New Projects\nShort note at the beginning: issues can be assigned to multiple boards simultaneously. The Member Task boards are set up to be the default boards when someone is assigned a task in any of our repos.\n\nGood things to know in general about this and workflows we should use:\n\nOpen Issues and then create branches/PRs based off of those Issues. Merging this PR into your project will then close the PR, the Issue itself, and move its status to Done on all boards where it is active\n\n\n\nMembers Task Boards\n\nThese should your general to-do items, and will be visible to other admin members in the organization.\nThey should be created from the Project template\nThe naming must be “USERNAME Tasks” in order for our tagging integration to work\nThe column titled (TO BE NAMED) should always exist, preferably as the first column in your board. The issue-adding integration will look for a column with this name to place issues; otherwise, it will create a new column called “No Status”. You can also just use/keep a “No Status” column if you’d prefer\nThe default privacy setting for the template board is Private from the public (i.e. only the members of our GitHub organization, of any level, can see that these project boards exist.) You can choose to hide your board from others, but you should always grant admin privileges to the other OSC admins by adding the Team osc-admin-members to the access list.\n\n\n\nOther Project Boards\n\nSome projects will also be particularly related to one (or a few) repositories\nThese boards will not (or least do not currently) have any extra integration to assign issues to a Project, but can be done manually with GitHub’s dropdown option within an issue.\n\n\n\nA Note on Closing Issues\n\nMake note of lmu-osc/test-repo#6: don’t close issues on your board just because they annoy you. It will close the Issue for everyone.\n\nUnassign an issue if you’re not responsible for it, or just remove it from your board (without unassigning) if you don’t want to see it on your board. (This 2nd option would be a bit unusual, but you do you, reader.)",
    "crumbs": [
      "Home",
      "GitHub Organization",
      "Projects Overview"
    ]
  },
  {
    "objectID": "github/projects.html#the-tagging-integration",
    "href": "github/projects.html#the-tagging-integration",
    "title": "GitHub Projects Feature",
    "section": "The Tagging Integration",
    "text": "The Tagging Integration\n\nBackground: the Workflows options in Projects allows for Issues in repos to be automatically added to Project boards. However, on the free organization tier, only 1 repo at a time can be linked to a project board. On the tiers 1 and 2 steps above free, the numbers increase to 5 and 20 repos, respectively. However, this is insufficient as we want all repos in our organization to have this feature\nAs such, the next best solution is to have a GitHub Action in all of our repos that listens for Issues to be assigned to someone. When this happens, a Workflow is triggered that 1) finds the “USERNAME Tasks” board for the assignee and 2) adds the task to that user’s board.\nThe integration relies on a secret (stored either in each individual repo or in an organization secret–Still need to evaluate security implications of both",
    "crumbs": [
      "Home",
      "GitHub Organization",
      "Projects Overview"
    ]
  },
  {
    "objectID": "github/essential_technical_skills.html",
    "href": "github/essential_technical_skills.html",
    "title": "Essential Tech Skills",
    "section": "",
    "text": "We collaborate extensively on GitHub, both internally amongest OSC members and when working with external contributors. This should be the primary point for updating, editing, and otherwise discussing the content of our GitHub repos.\nTo facilitate this collaboration internally, there are a number of technical skills you should first familiarize yourself with and then some typical “etiquette” to become accustomed to when using GitHub.\n\n\nBasic Technical Skills\nThis section broadly lists skills that are useful to learn to varying degrees, but does not prescribe any particular training or learning path. The goal is to give you a sense of the skills that are useful to have, and then you can choose how much time you want to invest in each one. Where relevant, I will try to denote which skills might be more important than others, and have linked to some resources that I have found useful. If you have other resources that you think are useful, please add them to the list! The goal is to make this a living document that we can all contribute to.\n\nLearn Markdown, specifically Pandoc Markdown which is the specific version of markdown used in RMarkdown documents and Quarto documents. You don’t need to learn everything, but you should have the manual above handy for your projects.\n\nQuarto has a nice summary page of some of the more important features and how they actually appear once coded.\n\nBasic terminal and command line usage. This is OS dependent, but MacOS and Linux are ~90% the same, and Windows still has some command overlap: https://linuxjourney.com/\nFile naming conventions:\n\nHarvard’s Biomedical Data Management recommendations\nMake use of snake_case, KebabCase, or camelCase although generally snake_case is preferred for naming files for readability purposes\nUse the ISO 8601 date format i.e. YYYY-MM-DD when dates are of relevance. The format YYYYMMDD is also generally acceptable.\n\nSemantic versioning particularly because we use it for GitHub tutorials\nLearn git. This is a never-ending topic, but here are some of the main points:\n\nStart with our Intro to Version Control and Collaborative Coding with Github tutorials for the basics. These are flavored specifically for use with RStudio, but I think the W3 Schools Git tutorial is also good for learning to use basic git with the command line.\nLearn about git branching as a means of separating your in-development features or updates, and for collaborating with others. We’re working on a tutorial for this, but this Learn Git Branching site is also recommended.\nHow to Write a Git Commit Message. My main take away from this article is to use the imperative mood and keep first-line messages to less than 50 characters as much as possible. Also, note that you’ll get better with determining what should be a commit as you practice using git over time.\n\nUnderstand how SSH works and maybe some detail on generating SSH keys with ssh-keygen. We teach people to use it for our git and GitHub tutorials, and we have enough systems in place where SSH becomes of concern that you should probably have a passing knowledge of what it is, how it works, and how to store/view/delete SSH keys on your computer. You can always ask ChatGPT for help using ssh-keygen, but it helps a lot to first learn what options are available!\n\n\n\nGit and GitHub Skills\nMisc. resources:\n\nHow to write a git commit (https://cbea.ms/git-commit/)\nHow to write a git issue (https://medium.com/nyc-planning-digital/writing-a-proper-github-issue-97427d62a20f , https://dev.to/opensauced/how-to-write-a-good-issue-tips-for-effective-communication-in-open-source-5443)\ngit branching (https://www.youtube.com/watch?v=e2IbNHi4uCI) and (https://www.youtube.com/watch?v=Q1kHG842HoI )\ngit branching strategies (https://www.youtube.com/watch?v=U_IFGpJDbeU)\nwriting pull requests (https://github.blog/developer-skills/github/how-to-write-the-perfect-pull-request/)\nQuickstart guide for GitHub projects (https://docs.github.com/en/issues/planning-and-tracking-with-projects/learning-about-projects/quickstart-for-projects)\n\nGeneral flow of knowledge one needs:\n\nGeneral git knowledge, and connecting to GitHub\nWriting good git commits\nCreating Issues on GitHub\nCreating branches and pushing them to GitHub\nOpening pull requests\nConnecting PRs to issues\nConnecting issues to projects\nManaging your project boards\n\n\n\nCollaboration Etiquette\nI asked ChatGPT to summarize typical GitHub collab etiquette for me, and here is the result (after light editing by me)\n\n\n1. Clear and Concise Commit Messages\nCommit messages are one of the most important aspects of collaboration because they communicate the history and reasoning behind changes in a project. Here’s how to keep them effective:\n\nBe Descriptive: A good commit message explains what and why something was changed, not just how it was changed. For example, instead of writing “fixed bug,” write “Fixes crash on login when no network connection is available.”\nUse Conventional Formatting: A widely used convention is to use a short (50-character) summary followed by a more detailed description if needed. For example:\nAdd feature to export user data as CSV\n\nThis change introduces an export button that allows users to download their data in CSV format. The feature includes basic validation of the file content.\nKeep It Concise: The summary should ideally be 50 characters or less. This is because it helps the message remain readable in Git logs and is often used in tools that visualize commit history.\nUse Imperative Mood: For example, use “Fix bug” or “Add feature,” rather than “Fixed bug” or “Adding feature.” This makes the message align with the “what” the commit is doing.\n\n\n\n\n2. Respect Branching Workflow\nA well-defined branching workflow helps to ensure that work is organized and the codebase remains clean. Here are some best practices:\n\nFollow Project’s Branching Strategy: Projects may have different branching strategies, such as Git Flow or trunk-based development. Understand and follow these rules:\n\nMain (or Master): This is the stable version of the project.\nDevelop: A branch for integrating features and testing new code before it’s merged into the main branch.\nFeature Branches: Create a new branch for each new feature or bug fix (e.g., feature/login-page or bugfix/fix-crash).\nRelease Branches: For preparing code for production or a new version release.\n\nKeep Branches Small and Focused: Each branch should handle one task (such as a feature or bugfix) to make it easier to review and merge. Avoid mixing different changes in one branch.\n\n\n\n\n3. Pull Requests (PRs) Best Practices\nPull Requests (PRs) are a critical way of proposing changes and getting feedback from others. Following these practices ensures that your PR is clear, concise, and easy to review.\n\nProvide Context: When you open a PR, include a description of the changes. What problem does it solve? Are there any known issues? Are there things reviewers need to pay special attention to?\nExample:\nFixes the crash when submitting a form with empty input fields.\n- Checks for empty fields before submission.\n- Adds a user-friendly error message.\nKeep PRs Focused: A PR should focus on one specific task or bug fix. It should not try to accomplish too many different things at once. If a PR is large or touches multiple areas of the codebase, consider splitting it into multiple smaller PRs.\nUse Meaningful Titles: PR titles should clearly indicate what is being changed, such as “Add user authentication” or “Fix issue with loading images in gallery view.”\nLink Related Issues: If the PR is addressing an issue, mention it using GitHub’s syntax to close the issue automatically (e.g., “Fixes #45” or “Closes #23”). This ensures that the issue is tracked and easily traceable. You can also explicitly link PRs to Issues in the GitHub repo. You can also create branches from GitHub Issues that will automatically link to the eventual PR.\nBe Responsive to Feedback: After submitting a PR, be prepared for feedback. Address comments promptly and be polite. If you’re unsure about something, don’t hesitate to ask for clarification. If you disagree with a comment, explain your reasoning clearly.\n\n\n\n\n4. Code Review Etiquette\nCode reviews are an essential part of maintaining quality in a collaborative project. Here’s how to conduct and participate in them properly:\n\nBe Constructive, Not Critical: If you’re reviewing someone’s code, focus on the code, not the person. Avoid personal comments, and instead provide suggestions that can help improve the code. For example:\n\nInstead of saying “This code is bad,” say “This could be more efficient by using a hash map instead of a list.”\n\nBe Respectful and Kind: Every developer is at a different skill level, and everyone makes mistakes. Use positive language to encourage others to improve. A simple, “Great job on the implementation! I suggest we update this section to improve readability,” can go a long way.\nAsk for Clarification, Don’t Assume: If you’re unsure why someone implemented something a certain way, ask them to explain. It could be a deliberate decision based on context or constraints you’re unaware of.\nMake It a Two-Way Conversation: A good code review is a dialogue. Be willing to explain your decisions when someone requests a change, but also be open to suggestions for improving your own code.\nCheck for Readability: Code readability is just as important as functionality. Make sure the code follows the project’s style guide, has meaningful variable names, and is well-commented where necessary.\n\n\n\n\n5. Issue Tracking and Communication\nGitHub’s issue tracker is essential for managing bugs, features, and tasks. Here’s how to use it effectively:\n\nUse Labels and Milestones: Labels help categorize issues (e.g., bug, enhancement, help wanted). Milestones can track progress towards project versions. Use these tools to keep track of priorities and deadlines.\nProvide Detailed Issue Descriptions: When opening an issue, be as specific as possible. Include the steps to reproduce, the expected behavior, and the actual behavior. If applicable, add logs, screenshots, or videos to clarify the problem.\nExample:\n**Bug:** Button does not work on mobile\n**Steps to reproduce:**\n1. Open the app on mobile.\n2. Tap on the 'Submit' button.\n**Expected behavior:** The button submits the form.\n**Actual behavior:** Nothing happens.\nRegular Communication: If you are working on an issue, comment regularly on progress, especially if the issue is complex or you’re waiting for input. If you’re waiting for feedback or testing, keep others informed.\nClose Issues Properly: When an issue is resolved, make sure to close it. If a PR fixes an issue, reference it in the PR description.\n\n\n\n\n6. Respect Licensing and Permissions\nOpen-source projects often have a license that dictates how the code can be used, modified, and distributed. It’s crucial to:\n\nRead and Follow the License: Make sure you understand the project’s license before contributing or using the code. Popular licenses like MIT, GPL, or Apache each have different terms regarding modification and redistribution.\nAsk for Permission When Needed: If you’re unsure whether a piece of code is open to contribution or use, it’s always best to ask. Avoid using third-party code unless you’ve reviewed the licensing and have permission.\nAcknowledge Contributions: If you’re using someone else’s code or resources (like libraries, icons, or documentation), be sure to give credit according to the project’s license.\n\n\n\n\n7. Documentation and Readability\nGood documentation makes collaboration smoother and ensures that the project remains maintainable over time.\n\nWrite Clear README Files: Every project should have a README that explains the purpose of the project, how to set it up, and how to contribute. Keep it concise and beginner-friendly.\nDocument Your Code: Use comments to explain complex or non-obvious parts of your code. Follow the project’s documentation style guidelines to maintain consistency.\nContribute to Wiki or Docs: If you’re adding a new feature or making a significant change, update or create relevant documentation. This includes setup instructions, how-to guides, or API documentation.\nStyle Guide: If the project has a coding style guide, make sure to follow it. Consistency in style helps maintain code readability and reduces friction when reviewing.\n\n\nBeyond the information above, I would add some of the following key elements:\n\nDON’T COMMIT DIRECTLY TO main!\n\nSelf-enforce the use of Issues and Pull Requests.\n\nNo issue or pull request is urgent unless someone says specifically says it is. In which case, this should also be communicated via Matrix.\n\nAs a corrollary: Issues might be opened without complete details. This is fine initially, and some time should be allotted for the author to make updates.\n\nTry to review assigned pull requests within a few days, max 2 weeks.\n\nIf you’ve requested a review from someone buy not received a review by that time, then it’s okay to just continue working or merge if desired.\n\nCan always assign someone as a reviewer of a PR or assign them to an issue.\n\nThey can unassign, recommend someone else, and/or state when they might be able to get to it.\nThat is, being assigned an Issue or PR does not mean you are commanded to do it. If you unassign or can’t contribute, try to let the author know, and either assign it back to the author or delegate to someone else if reasonable.\n\nDisable emails from new comments, assigned issues/PRs, etc. Only check these within the GitHub website. Lifesaver 🌟\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "GitHub Organization",
      "Essential Tech Skills"
    ]
  },
  {
    "objectID": "authoring_tutorials/things_you_should_not_change.html",
    "href": "authoring_tutorials/things_you_should_not_change.html",
    "title": "Things You Shouldn’t Change",
    "section": "",
    "text": "A more accurate title for this page would be “Things You Shouldn’t Change Without a Good Reason.” The following are some of the things you should be careful about changing in the project:\n\nThe GitHub Action Files\nThe publishing workflow should work out of the box for Quarto projects, and for projects that are combined with R (with or without {renv}–but please do use {renv} if your project uses R). If you need to change this workflow file, it should only be because there is genuinely an issue with the configuration or if a dependency is not installed.\nMissing system dependencies may particularly be a problem for now because, at the time of writing this in early 2025, GitHub recently changed their latest Ubuntu image to 24.04 and stripped away some dependencies that they included in the 22.02 image.\nYou’re welcome to adjust or create your own publish workflow if needed, or you can contact staff at the OSC for help.\n\n\nThe .gitignore\nThis has been set-up to ignore annoying or unneeded components of R projects/packages, Quarto projects, and files that are commonly included in repositories even though they should not be. Feel free to add more files to the .gitignore if something specific needs to be blocked or ignored, but, in general, you should not delete items from this file.\n\n\nThe _quarto.yml File\nWe aim for our tutorials to have a standard look and feel, and the _quarto.yml file is a big part of that. If you need to change this file beyond the required adjustments mentioned in previous chapters, please contact staff at the OSC for help. We’re always open for improvements to the design, but we do want to make sure any changes get applied across all tutorials.\n\n\nThe LICENSE Files\nThe license files are there to protect the intellectual property of the authors and the OSC, and should not be changed unless there are legal reasons or extenuating circumstances to do so. If you have questions about the license, please contact staff at the OSC. We’re currently working on documentation that outlines our licensing decisions in greater detail.\n\n\nThe CITATION File\nThe CITATION file is there to help others cite your work, and we have tried to select useful fields provided by the Citation File Format. As with the _quarto.yml file, we’re open to suggestions if more fields should be added, but please contact staff at the OSC before making changes.\n\n\nThe About Page\nThe yaml header in the About page is also standardized to approximately align with the CITATION file, but Quarto does not align exactly with CFF so you cannot simply copy/paste the CITATION file contents to this section.\nThe main content of the About page can be altered to add contributors notes and any other relevant authoring information that cannot be included as metadata in the yaml field. Please do not remove or change the notes about licensing on this page.\nIf you have cited other sources in your tutorial and created a bibliography, please reference the bibliography in the yaml header of this page with e.g. bibliography: your_bib_file.bib\n\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Things You Shouldn't change"
    ]
  },
  {
    "objectID": "authoring_tutorials/getting_started.html",
    "href": "authoring_tutorials/getting_started.html",
    "title": "Getting Started",
    "section": "",
    "text": "This chapter introduces how to make a tutorial based off of our template at lmu-osc/tutorial-template, and establishes much of the technical details that need to be set up before some of the later chapter. Additionally, we assume you are familiar with the structure of the tutorial template repo after reading the previous chapter.",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Getting Started"
    ]
  },
  {
    "objectID": "authoring_tutorials/getting_started.html#pages-deployment",
    "href": "authoring_tutorials/getting_started.html#pages-deployment",
    "title": "Getting Started",
    "section": "Pages Deployment",
    "text": "Pages Deployment\n\n\n\n\n\n\nHeads up!\n\n\n\nIn Step 3: if your terminal becomes stuck on the message “Deploying gh-pages branch to website (this may take a few minutes)” and if your deployment wasn’t successful, then you have probably not made the repository public. In the GitHub repo for your project, navigate to the Visibility option in the settings, and change to public. Then, repeat Step 3.\n\n\n\nClone the new repository\nIf you are going to use RStudio with your project, create a new RStudio project while on the main branch. Commit this .RProj file and push to GitHub immediately.\nRun the command quarto publish gh-pages at the terminal, and agree to publish the site.\n\nThis will automatically activate GitHub Pages on the repo, and set the site to be deployed from the gh-pages branch on GitHub.\n\nRemove the gh-pages branch from your local computer with git branch -D gh-pages. You should not be making direct edits to this branch as it is updated by the CI/CD pipeline for publishing.\n\n\n\n\n\n\n\nNote\n\n\n\nYou can check the status of the website deployment by navigating to Actions in the repo. A green checkbox indicates succesful deployment. Your terminal may or may not continue to display “Deploying gh-pages branch to website (this may take a few minutes).” If your deloyment was successful, you can simply use “Cmd+C” to exit the loop.",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Getting Started"
    ]
  },
  {
    "objectID": "authoring_tutorials/getting_started.html#zenodo-preparation",
    "href": "authoring_tutorials/getting_started.html#zenodo-preparation",
    "title": "Getting Started",
    "section": "Zenodo Preparation",
    "text": "Zenodo Preparation\nWe use Zenodo for the generation of our repository DOIs, and the steps below outline a number of requirements or best practices we aim to follow when making our first Zenodo submission.\n\nEnable Zenodo Extension\n\nFellow the 5 GitHub steps for linking Zenodo with GitHub.\nIf you don’t want to connect these accounts or you are otherwise unable to authorize the repo on Zenodo, notify one of the admin members of the OSC GitHub organization. They should have the admin rights necessary to enable your new GitHub repo.\nIf you’re waiting on Step 2, you can still move forward through the rest of this Zenodo Preparation section.\n\n\n\nCITATION File\nZenodo in particular looks for a Citation File Format citation file so that it can auto-generate a citation on the Zenodo website. GitHub can also use this file for creating a formatted citation.\n\nOpen the CITATION.cff file, and complete it to the best of your ability/knowledge of what the tutorial will be named, who the authors will be, etc. See the project’s documentation page if any fields are unclear, or open an issue in your repo and assign it to another OSC member.\nRemove the DOI field for now. This will be added back after we generate a DOI from Zenodo.\n\n\n\nAbout.qmd\nIn addition to the CITATION file, we include citation information direcrtly in the tutorial in the About pages.\n\nOpen the about.qmd file, and complete the yaml header with essentially the same citation information as above, filling out the fields to the best of your ability.\n\n\n\nREADME\n\nOpen the README file, and add a basic description of the project. This does not need to be more than a few basic sentences for now.",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Getting Started"
    ]
  },
  {
    "objectID": "authoring_tutorials/getting_started.html#zenodo-connection",
    "href": "authoring_tutorials/getting_started.html#zenodo-connection",
    "title": "Getting Started",
    "section": "Zenodo Connection",
    "text": "Zenodo Connection\nAfter the connection between the repository and Zenodo has been confirmed, it is now possible to trigger the connection by having a GitHub “release.”\n\nFrom the GitHub repo page, press the “Create a new release” link on the right hand side.\nYou must enter a tag, a release title, and a description.\n\nThe tag should be the semantic version prefixed with “v” e.g. v0.0.1 for the first release\nThe title can be something like “Tutorial repo begin” or similar.\nThe description can be very basic info about the repo/project. Later releases will use the “Generate release notes” button to create this description information.\n\nPress “Publish release.” The repo will now be sent to Zenodo, and a DOI should be generated.\n\nHowever, this may fail if the CITATION file has errors. You should receive a notice about this ahead of time from the GitHub Action that checks the CITATION file so make sure to fix any mistakes in advance.\n\nNavigate to Zenodo.org, log-in, press on your user-name in the top right corner, and click on GitHub. Under the enabled repositories, you should see the name of your repo.\nClick the DOI badge. This should open a pop-up with different options for copying the text of the badge. Copy the Markdown option.\nPaste the code for the DOI Markdown badge at the top of the README file.\nAdd the DOI to the CITATION file.\n\nCongrats! Your tutorial now has the infrastructure for automated deployments to GitHub Pages, and additional releases on GitHub will update the DOI + content of your project on Zenodo.",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Getting Started"
    ]
  },
  {
    "objectID": "authoring_tutorials/authoring_and_versions.html",
    "href": "authoring_tutorials/authoring_and_versions.html",
    "title": "Authoring and Versions",
    "section": "",
    "text": "Congrats, the technical set-up of the repository is now complete! As a review, the following features are now available:\n\nA standardized CITATION file that can be used by both GitHub and Zenodo\nA standardized About page that is indexable by Google Scholar\nA connection to Zenodo for each new “release” of the tutorial\nA DOI to identify our repository\nAnalytics of the website with Matomo\nA unified layout with the other LMU OSC tutorials",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Authoring and Versions"
    ]
  },
  {
    "objectID": "authoring_tutorials/authoring_and_versions.html#when-to-version",
    "href": "authoring_tutorials/authoring_and_versions.html#when-to-version",
    "title": "Authoring and Versions",
    "section": "When to version?",
    "text": "When to version?\n\nMoving Beyond v0.0.1\nIf you followed the earlier instructions, the initial version of your project should always be v0.0.1. This version contains essentially no content, and only some technical/set-up files. But what should constitute your first “release” after this? When have you moved up a version?\nYou could, for example, increment the patch numbers to e.g. v0.0.2, v0.0.3, … as you add and refine sections or chapters to your tutorial. However, this becomes tedious, and doesn’t reflect the reality of jumping between chapters as we develop, expanding upon and deleting chapters, and so on.\nMy rule of thumb is, in the early and initial stages of development, that it’s okay to be a little bit fast and dirty with the versioning: only bother to reversion when you are at the point that your first minor release, i.e. v0.1.0, seems like it would be reasonable. And a minor release is probably reasonable around the time that you would ask another OSC member to review a (nearly) completed draft.\n\n\nMoving Beyond v0.1.X\nAt the stage of v0.1.X, there will likely be several rounds of review and refinement. How and when should reviews be incremented?\n\nPatches: if primarily text, grammar, and other small adjustments are made to the tutorial, increment by just a patch.\nMinor: if large chunks of a chapter or chapters are added, removed, or relocated, increment by a minor release.\nMajor: the first major release should occur around the time the tutorial goes live for e.g. the first workshop. This might not hold universally, but is a good rule-of-thumb for when a tutorial is “finalized.”",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Authoring and Versions"
    ]
  },
  {
    "objectID": "authoring_tutorials/authoring_and_versions.html#where-to-version",
    "href": "authoring_tutorials/authoring_and_versions.html#where-to-version",
    "title": "Authoring and Versions",
    "section": "Where to Version?",
    "text": "Where to Version?\n\nCITATION File\n\nupdate the citation file\n\n\n\nAbout File\n\n\nGitHub Releases\n\nversioning will also be done in the GitHub Release, discusses in the Releases section",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Authoring and Versions"
    ]
  },
  {
    "objectID": "authoring_tutorials/authoring_and_versions.html#branching",
    "href": "authoring_tutorials/authoring_and_versions.html#branching",
    "title": "Authoring and Versions",
    "section": "Branching",
    "text": "Branching\n\nuse branches for new features and changes, particularly after v0.1.0 is released as this helps us keep a better record of changes over time",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Authoring and Versions"
    ]
  },
  {
    "objectID": "authoring_tutorials/authoring_and_versions.html#pull-requests",
    "href": "authoring_tutorials/authoring_and_versions.html#pull-requests",
    "title": "Authoring and Versions",
    "section": "Pull Requests",
    "text": "Pull Requests\n\nopen pull requests for branches, even if you are going to self-approve the content. the PR’s will be the basis for notes\nuse informative titles for the pull requests\ngenerally, choose to Squash and Merge. use a Merge commit if you’re finalizing a version increment\n\n\nReviewers\n\nalways feel free to assign someone as a reviewer of your PR, especially if",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Authoring and Versions"
    ]
  },
  {
    "objectID": "authoring_tutorials/authoring_and_versions.html#issues",
    "href": "authoring_tutorials/authoring_and_versions.html#issues",
    "title": "Authoring and Versions",
    "section": "Issues",
    "text": "Issues\n\nopening issues is a great way to keep track of potential changes you want to make yourself to the repo, where others can request changes, or you can ask for help or request that others assist on a task.\nhelpful tip: you can create a branch directly from a GitHub Issue, and then check this out locally. The branch will automatically be linked to the Issue such that when you eventually merge that branch through a Pull Request, the issue will automatically be marked as resolved",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Authoring and Versions"
    ]
  },
  {
    "objectID": "authoring_tutorials/tutorial_template_repo.html",
    "href": "authoring_tutorials/tutorial_template_repo.html",
    "title": "Tutorial Template Repo",
    "section": "",
    "text": "One of the primary objectives of the OSC is to braoden both knowledge and practice of open science, and the online tutorials we offer are a cornerstone of this initiative. In that regard, some tutorials were brought over by our staff members from previous research institutions, and several more were commissioned between approximately 2021 and 2025.\nWhile the content from these tutorials was designed and/or adapted to fit in with the other tutorials to create a logical learning flow, the tutorials were not technically standardized. That is, the licenses, HTML/CSS formatting, citation styles, and so on were not consistent between projects. Towards the end of 2024 and through 2025 we worked to align our existing tutorials as much as possible on these issues, but this was a significant amount of work.\nWanting to avoid a repeat of this process in the future, we established a templated GitHub repository, lmu-osc/tutorial-template with all of the default settings and files we wish to have applied to our projects going forward. The core contents of this repo are generally intended to be prescriptive when creating new tutorials, outside of deciding what content should be included in the tutorial itself. Let’s explore this in more detail below.",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Tutorial Template Overview"
    ]
  },
  {
    "objectID": "authoring_tutorials/tutorial_template_repo.html#basic-repo-structure",
    "href": "authoring_tutorials/tutorial_template_repo.html#basic-repo-structure",
    "title": "Tutorial Template Repo",
    "section": "Basic Repo Structure",
    "text": "Basic Repo Structure\nAll of the folders and files in the lmu-osc/tutorial-template repo are laid out in the directory tree below.\n\n\n.\n├── .github\n│   └── workflows\n│       ├── citation-check.yml\n│       └── publish.yaml\n├── .gitignore\n├── CITATION.cff\n├── LICENSE-CODE.md\n├── LICENSE.md\n├── README.md\n├── TOPIC1\n│   ├── page1.qmd\n│   └── page2.qmd\n├── TOPIC2\n│   ├── page1.qmd\n│   ├── page2.qmd\n│   └── page3.qmd\n├── _quarto.yml\n├── about.qmd\n├── assets\n│   ├── LMU_OSC_favicon.jpg\n│   └── LMU_OSC_logo.svg\n├── index.qmd\n├── matomo-analytics.html\n└── styles.css\n\n\nSome of these files and folders require more explanation than others, and we aim to clarify all important pieces below. Later chapters will elaborate on how precisely to set up e.g. GitHub Pages for the tutorial, connect with Zotero, etc. But before diving in to developing a tutorial, it’s necessary to get an overview of the structure.",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Tutorial Template Overview"
    ]
  },
  {
    "objectID": "authoring_tutorials/tutorial_template_repo.html#important-files-and-folders",
    "href": "authoring_tutorials/tutorial_template_repo.html#important-files-and-folders",
    "title": "Tutorial Template Repo",
    "section": "Important Files and Folders",
    "text": "Important Files and Folders\n\n.gitignore\nIf you’re not familiar with .gitignore files, I recommend taking a look at this overview.\nThe included ignore file for the tutorials is a modified version of GitHub’s template for R projects with some additions to ignore Quarto specific files, namely the _site folder. Some people push this folder to their GitHub repo, and use it to serve their website from. However, we have a CI/CD workflow that will automatically render the website and serve it from the gh-pages branch.\nFor Mac users, any .DS_Store files are also automatically ignored–those should never be tracked in a git project anyway as they are local indexing files for searching the system. (Tip: run the R function usethis::git_vaccinate() if you want to globally ignore a handful of annoying files, namely .Rproj.user, .Rhistory, .Rdata, .httr-oauth, .DS_Store, and .quarto.)\n\n\n\n\n\n\n.gitignore File Contents\n\n\n\n\n\n# History files\n.Rhistory\n.Rapp.history\n\n# Session Data files\n.RData\n.RDataTmp\n\n# User-specific files\n.Ruserdata\n\n# Example code in package build process\n*-Ex.R\n\n# Output files from R CMD build\n/*.tar.gz\n\n# Output files from R CMD check\n/*.Rcheck/\n\n# RStudio files\n.Rproj.user/\n\n# produced vignettes\nvignettes/*.html\nvignettes/*.pdf\n\n# OAuth2 token, see https://github.com/hadley/httr/releases/tag/v0.3\n.httr-oauth\n\n# knitr and R markdown default cache directories\n*_cache/\n/cache/\n\n# Temporary files created by R markdown\n*.utf8.md\n*.knit.md\n\n# R Environment Variables\n.Renviron\n\n# pkgdown site\ndocs/\n\n# translation temp files\npo/*~\n\n# RStudio Connect folder\nrsconnect/\n\n# Quarto\n/.quarto/\n\n# Future-proofing: ignore commonly included files that should not be tracked\n# Inspired by usethis::git_vaccinate() options\n.DS_Store\n.Rproj.user\n.httr-oauth\n.quarto\n_site/\n\n# Tutorials should pull custom.scss from our central branding repo\nlmu-osc-custom.scss\n\n\n\n\n\n.github/workflows\nThe two files contained in this directory, citation-check.yml and publish.yml, are yaml files for GitHub Actions that should run in your tutorials. The first action file checks that the formatting of your CITIATION.cff file meets requirements, and the publish.yml waits for changes on the main git branch then renders the whole website to the gh-pages branch in the repo.\nBoth workflows are from commonly available templates, but I have modified the publish.yml to have some additional executuion instructions depending on whether or not the {renv} package is used in your project. (If you have any R code included, then please do use {renv}.)\nA later chapter will talk about how to manually run these pipelines if you need/want to for any reason, and will go into more detail on the code. However, 95% of the time you will not need to make any changes to these pipelines. Just be aware that they exist, and they are doing things that should make your life easier.\n\n\nCITATION.cff\n\nBackground: Citation File Format\nThere is fairly extensive documentation online for Citation File Format, but, in short, it is a standardized method for writing citation files in a yaml format. There are hundreds of different “fields” that can be filled out like DOIs, ORCIDs, author information, institution information, and so on.\n\n\nWhy?\nThis file ultimately has three main uses for our projects:\n\nThey are needed for automated processing and the DOI generation procedure we use with Zenodo.\nGitHub recognizes these files, and will create a citation for us directly in the repo. (Not as a file, but check out the “Cite this repository” button on the right-hand side of the repository home.)\nThis helps prepare the information that goes into the about.qmd file, discussed later.\n\n\n\nOur File\nThe current version of the CITATION.cff file is listed below.\n\n\n\n\n\n\nCITATION.cff File Contents\n\n\n\n\n\ncff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n- family-names: \"YOUR_NAME_HERE\"\n  given-names: \"YOUR_NAME_HERE\"\n  orcid: \"https://orcid.org/0000-0000-0000-0000\"\n- family-names: \"Lisa\"\n  given-names: \"Mona\"\n  orcid: \"https://orcid.org/0000-0000-0000-0000\"\ntitle: \"\"\nversion: 0.0.1\ndoi: \ndate-released: YYYY-MM-DD\nrepository-code: \"https://github.com/lmu-osc/\"\nurl: \"https://github.com/lmu-osc/\"\n\n\n\nFields you should pay attention to or fill out:\n\nauthors should be completed with your family (last) name, given (first) name, and an ORCID for all authors. Remove the ORCID field if you do not have one.\ntitle should be replaced with the name of the tutorial\nversion should begin with 0.0.1 following typical semantic versioning rules. Do not increase this until after making the initial Zenodo connection (discussed in a later chapter).\ndoi will remain empty inititally, but can be filled out after connecting with Zenodo\ndata-released should be the date that the current version of the repo was released\nrepository-code should be the link directly to the GitHub repository of the project\nurl should be the address for the actual websige i.e. the GitHub Pages\n\n\n\n\nLICENSES\nOur standard licenses are CC-BY-SA 4.0 for the written text and CC-0 for code contained within the tutorials. These license files are contained in LICENSE.md and LICENSE-CODE.md respectively.\n\n\nREADME.md\nThis file should follow the typical conventions of a README file in that it provides a brief overview of the project, and any particular specifications on running code or downloading additional softwares as needed.\nOtherwise, we have no strong recommendations on what to include in this file other the Zenodo DOI badge at the top of the file. (Again, this is discussed in a later chapter.)\n\n\nTOPIC* Directories\nThese two directories are just example/template spaces for where you should store your Quarto (.qmd) files. In general, we anticipate that the tutorials will be divided into 2-5 broad sections, and each section will be represented by one of these folders. Each section will contain chapters which are independent Quarto files stored within their respective folders.\nThis image illustrates how “TOPIC1” and “TOPIC2” are the different “sections” of the tutorial while the Quarto files are the different chapters.\n\n\n├── TOPIC1\n│   ├── page1.qmd\n│   └── page2.qmd\n├── TOPIC2\n│   ├── page1.qmd\n│   ├── page2.qmd\n│   ├── page3.qmd\n\n\n\n\n\n\n\n\nNote that placing the chapter files in the respective folders will not automatically organize them into that location. You must specify which files are rendered, and where they are located in the _quarto.yml file.\n\n\n_quarto.yml\nThe _quarto.yml file can be thought of the central orchestrator for the website. It defines what website themes/CSS/SCSS to use, how the pages should be organized, and other general properties of the website.\n\n\n\n\n\n\n_quarto.yml File Contents\n\n\n\n\n\n# Begin Project\nproject:\n  type: website\n  pre-render: wget -nc https://raw.githubusercontent.com/lmu-osc/branding-resources/refs/heads/main/lmu-osc-custom.scss\n  post-render: rm lmu-osc-custom.scss\n# End Project\n\n\n# Begin Website\nwebsite:\n  title: \"TUTORIAL TITLE HERE\"\n  page-footer: \n    center: \"Copyright, 2024 Open Science Center at LMU Munich\"\n    border: false\n  search:\n    location: sidebar\n  repo-url: https://github.com/lmu-osc/REPO-NAME-HERE\n  repo-actions: [edit, issue]\n  back-to-top-navigation: true\n  page-navigation: true\n  favicon: assets/LMU_OSC_favicon.jpg\n  margin-header: |\n    ![](/assets/LMU_OSC_logo.svg){width=\"175\"}\n  \n  \n  navbar:\n    right: \n      - about.qmd\n    left:\n      - href: index.qmd\n        text: Home\n    tools:\n      - icon: github\n        menu:\n          - text: Source Code\n            url:  https://github.com/lmu-osc/REPO-NAME-HERE\n          - text: Report a Bug\n            url:  https://github.com/lmu-osc/REPO-NAME-HERE/issues\n      - icon: house-heart\n        url: https://www.osc.uni-muenchen.de/index.html\n   \n        \n  sidebar:\n    style: \"docked\"\n    contents:\n      - text: \"Overview\"\n        href: index.qmd\n      - section: \"TOPIC 1\"\n        contents:\n          - href: TOPIC1/page1.qmd\n            text: \"TOPIC1 Page1 Title\"\n          - href: TOPIC1/page2.qmd\n            text: \"TOPIC1 Page2 Title\"\n      - section: \"TOPIC 2\"\n        contents:\n          - href: TOPIC2/page1.qmd\n            text: \"TOPIC2 Page1 Title\"\n          - href: TOPIC2/page2.qmd\n            text: \"TOPIC2 Page2 Title\"\n          - href: TOPIC2/page3.qmd\n            text: \"TOPIC2 Page3 Title\"\n# End Website\n\n\n# Begin Format\nformat:\n  html:\n    theme: \n      - cosmo\n      - lmu-osc-custom.scss\n    css: \n      - https://raw.githubusercontent.com/lmu-osc/branding-resources/refs/heads/main/lmu-osc-styles.css\n    toc: true\n    fontsize: 13pt\n    code-overflow: wrap\n    grid:\n      sidebar-width: 300px\n    include-in-header:\n      - file: matomo-analytics.html\n# End Format\n\n# Begin Editor\neditor: source\n# End Editor\n\n\n\nThis is one of the more complex files in the repository, but there are only a few sections you’ll need to interact with directly. I’ll break down the file based on the 4 major categories in our file: project, website, format, and editor.\n\nproject\n\n\n\n\n\n\nProject Options\n\n\n\n\n\n# Begin Project\nproject:\n  type: website\n  pre-render: wget -nc https://raw.githubusercontent.com/lmu-osc/branding-resources/refs/heads/main/lmu-osc-custom.scss\n  post-render: rm lmu-osc-custom.scss\n# End Project\n\n\n\nAt a high level, this defines the entire project as being a website and I have used the pre- and post- render options to collect some standardized SCSS styling from our lmu-osc/branding repository. The details of this are in a footnote below1, but, in short, this is done to ensure that the same branding is added to all of our repos and so that we can just make branding changes to one repo in the future (rather than all of our tutorials.)\n\n\nwebsite\nThis is the section you will interact with the most (and almost exclusively) when developing your project. This will be subdivided into 3 sections: a general section, the navbar, and the sidebar.\n\n\n\n\n\n\nAll website Options\n\n\n\n\n\n# Begin Website\nwebsite:\n  title: \"TUTORIAL TITLE HERE\"\n  page-footer: \n    center: \"Copyright, 2024 Open Science Center at LMU Munich\"\n    border: false\n  search:\n    location: sidebar\n  repo-url: https://github.com/lmu-osc/REPO-NAME-HERE\n  repo-actions: [edit, issue]\n  back-to-top-navigation: true\n  page-navigation: true\n  favicon: assets/LMU_OSC_favicon.jpg\n  margin-header: |\n    ![](/assets/LMU_OSC_logo.svg){width=\"175\"}\n  \n  \n  navbar:\n    right: \n      - about.qmd\n    left:\n      - href: index.qmd\n        text: Home\n    tools:\n      - icon: github\n        menu:\n          - text: Source Code\n            url:  https://github.com/lmu-osc/REPO-NAME-HERE\n          - text: Report a Bug\n            url:  https://github.com/lmu-osc/REPO-NAME-HERE/issues\n      - icon: house-heart\n        url: https://www.osc.uni-muenchen.de/index.html\n   \n        \n  sidebar:\n    style: \"docked\"\n    contents:\n      - text: \"Overview\"\n        href: index.qmd\n      - section: \"TOPIC 1\"\n        contents:\n          - href: TOPIC1/page1.qmd\n            text: \"TOPIC1 Page1 Title\"\n          - href: TOPIC1/page2.qmd\n            text: \"TOPIC1 Page2 Title\"\n      - section: \"TOPIC 2\"\n        contents:\n          - href: TOPIC2/page1.qmd\n            text: \"TOPIC2 Page1 Title\"\n          - href: TOPIC2/page2.qmd\n            text: \"TOPIC2 Page2 Title\"\n          - href: TOPIC2/page3.qmd\n            text: \"TOPIC2 Page3 Title\"\n# End Website\n\n\n\n\nGeneral Options\nFields you should update or pay attention to:\n\ntitle should be the actual project title\nrepo-url should be the URL directly to the GitHub repo\npage-footer please update the year in the copyright if needed\n\n\n\n\n\n\n\nGeneral Website Options\n\n\n\n\n\nwebsite:\n  title: \"TUTORIAL TITLE HERE\"\n  page-footer: \n    center: \"Copyright, 2024 Open Science Center at LMU Munich\"\n    border: false\n  search:\n    location: sidebar\n  repo-url: https://github.com/lmu-osc/REPO-NAME-HERE\n  repo-actions: [edit, issue]\n  back-to-top-navigation: true\n  page-navigation: true\n  favicon: assets/LMU_OSC_favicon.jpg\n  margin-header: |\n    ![](/assets/LMU_OSC_logo.svg){width=\"175\"}\n  \n\n\n\n\n\nnavbar\nThis section is for specifying the navbar or navigation bar at the top of the window. The only updates that should be made here are to the URLs which should be updated to include the correct GitHub repo address.\n\n\n\n\n\n\nNavigation Bar (navbar) Options\n\n\n\n\n\n  navbar:\n    right: \n      - about.qmd\n    left:\n      - href: index.qmd\n        text: Home\n    tools:\n      - icon: github\n        menu:\n          - text: Source Code\n            url:  https://github.com/lmu-osc/REPO-NAME-HERE\n          - text: Report a Bug\n            url:  https://github.com/lmu-osc/REPO-NAME-HERE/issues\n      - icon: house-heart\n        url: https://www.osc.uni-muenchen.de/index.html\n   \n\n\n\n\n\nsidebar\nThis is the section of the _quarto.yml file that allows you to specify the layout of your sections and chapters, as discussed in the TOPIC1 and TOPIC2 section. You can add as many sections as you need–just make sure to provide them with an appropriate title. Likewise, you can include chapters under a section by listing the chapters under contents, and then providing at least an href which is a path to the chapter Quarto file.\nYou can also add a text tag directly after the href which will provide a new name for the chapter in the sidebar. However, you do not need to specify a text tag as Quarto will otherwise search for and use the value of title in your .qmd file.\n\n\n\n\n\n\nSidebar Options\n\n\n\n\n\n  sidebar:\n    style: \"docked\"\n    contents:\n      - text: \"Overview\"\n        href: index.qmd\n      - section: \"TOPIC 1\"\n        contents:\n          - href: TOPIC1/page1.qmd\n            text: \"TOPIC1 Page1 Title\"\n          - href: TOPIC1/page2.qmd\n            text: \"TOPIC1 Page2 Title\"\n      - section: \"TOPIC 2\"\n        contents:\n          - href: TOPIC2/page1.qmd\n            text: \"TOPIC2 Page1 Title\"\n          - href: TOPIC2/page2.qmd\n            text: \"TOPIC2 Page2 Title\"\n          - href: TOPIC2/page3.qmd\n            text: \"TOPIC2 Page3 Title\"\n\n\n\n\n\nformat\nThis section only provides additional website formatting and styling decisions, and does not need any changes. (However, if you think there are broad styling changes or additions we should make for all of our tutorials, feel free to open an issue or a PR!)\n\n\n\n\n\n\nFormat Options\n\n\n\n\n\n# Begin Format\nformat:\n  html:\n    theme: \n      - cosmo\n      - lmu-osc-custom.scss\n    css: \n      - https://raw.githubusercontent.com/lmu-osc/branding-resources/refs/heads/main/lmu-osc-styles.css\n    toc: true\n    fontsize: 13pt\n    code-overflow: wrap\n    grid:\n      sidebar-width: 300px\n    include-in-header:\n      - file: matomo-analytics.html\n# End Format\n\n\n\n\n\neditor\nWhen editing the project in RStudio, this determines whether Quarto documents will open up in source or visual mode by default. We have opted for source as the default.\n\n\n\n\n\n\nSource or Visual Editor\n\n\n\n\n\n# Begin Editor\neditor: source\n# End Editor",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Tutorial Template Overview"
    ]
  },
  {
    "objectID": "authoring_tutorials/tutorial_template_repo.html#qmd-files",
    "href": "authoring_tutorials/tutorial_template_repo.html#qmd-files",
    "title": "Tutorial Template Repo",
    "section": ".qmd Files",
    "text": ".qmd Files\nThe index.qmd and about.qmd files are the only two Quarto (i.e. .qmd) files that also need to be included in the tutorial–you will presumably author the rest!\nThe index.qmd file is essentially the home page of the website, much like https://lmu-osc.github.io/manual/ is the home page of this website. You have flexibility to populate this how you see fit.\nThe about.qmd is much more structured, and will be discussed in later chapters. This page should be updated to include author information, but the other content should not be changed.",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Tutorial Template Overview"
    ]
  },
  {
    "objectID": "authoring_tutorials/tutorial_template_repo.html#assets-folder",
    "href": "authoring_tutorials/tutorial_template_repo.html#assets-folder",
    "title": "Tutorial Template Repo",
    "section": "Assets Folder",
    "text": "Assets Folder\nThis folder is a quasi-standard location for storing e.g. images, videos, and other media files. The only files we store in here by default are some LMU logos. Please try to make use of this folder for storing your media files.",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Tutorial Template Overview"
    ]
  },
  {
    "objectID": "authoring_tutorials/tutorial_template_repo.html#footnotes",
    "href": "authoring_tutorials/tutorial_template_repo.html#footnotes",
    "title": "Tutorial Template Repo",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nDue to how Quarto renders projects, the SCSS file must physically be present in the directory when executing. As such, the file is downloaded from our branding GitHub repo before rendering, and then removed again after rendering becasue we do not want to retain this file in the repo. This is in contrast to the CSS file which can simply be read from somewhere on the web, and is the reason why we are able to specify the css parameter as just a link to our central branding repo.↩︎",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Tutorial Template Overview"
    ]
  },
  {
    "objectID": "about/page1.html",
    "href": "about/page1.html",
    "title": "Page Title Here",
    "section": "",
    "text": "The headers below cause the table of contents/dropdown on the right to be visible.",
    "crumbs": [
      "Home",
      "About",
      "TOPIC1 Page1 Title"
    ]
  },
  {
    "objectID": "about/page1.html#level-two",
    "href": "about/page1.html#level-two",
    "title": "Page Title Here",
    "section": "Level Two",
    "text": "Level Two\n\nL3\n\n\nL3 Again\n\n\nAnd one more time",
    "crumbs": [
      "Home",
      "About",
      "TOPIC1 Page1 Title"
    ]
  },
  {
    "objectID": "about/page1.html#another-level-two",
    "href": "about/page1.html#another-level-two",
    "title": "Page Title Here",
    "section": "Another Level Two",
    "text": "Another Level Two",
    "crumbs": [
      "Home",
      "About",
      "TOPIC1 Page1 Title"
    ]
  },
  {
    "objectID": "about/page1.html#level-two-1",
    "href": "about/page1.html#level-two-1",
    "title": "Page Title Here",
    "section": "Level Two",
    "text": "Level Two",
    "crumbs": [
      "Home",
      "About",
      "TOPIC1 Page1 Title"
    ]
  },
  {
    "objectID": "LICENSE-CODE.html",
    "href": "LICENSE-CODE.html",
    "title": "Creative Commons Zero v1.0 Universal",
    "section": "",
    "text": "Creative Commons Zero v1.0 Universal\nCREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE LEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS INFORMATION ON AN “AS-IS” BASIS. CREATIVE COMMONS MAKES NO WARRANTIES REGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED HEREUNDER.\n\nStatement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer exclusive Copyright and Related Rights (defined below) upon the creator and subsequent owner(s) (each and all, an “owner”) of an original work of authorship and/or a database (each, a “Work”).\nCertain owners wish to permanently relinquish those rights to a Work for the purpose of contributing to a commons of creative, cultural and scientific works (“Commons”) that the public can reliably and without fear of later claims of infringement build upon, modify, incorporate in other works, reuse and redistribute as freely as possible in any form whatsoever and for any purposes, including without limitation commercial purposes. These owners may contribute to the Commons to promote the ideal of a free culture and the further production of creative, cultural and scientific works, or to gain reputation or greater distribution for their Work in part through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any expectation of additional consideration or compensation, the person associating CC0 with a Work (the “Affirmer”), to the extent that he or she is an owner of Copyright and Related Rights in the Work, voluntarily elects to apply CC0 to the Work and publicly distribute the Work under its terms, with knowledge of his or her Copyright and Related Rights in the Work and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be protected by copyright and related or neighboring rights (“Copyright and Related Rights”). Copyright and Related Rights include, but are not limited to, the following:\n\nthe right to reproduce, adapt, distribute, perform, display, communicate, and translate a Work;\nmoral rights retained by the original author(s) and/or performer(s);\npublicity and privacy rights pertaining to a person’s image or likeness depicted in a Work;\nrights protecting against unfair competition in regards to a Work, subject to the limitations in paragraph 4(a), below;\nrights protecting the extraction, dissemination, use and reuse of data in a Work;\ndatabase rights (such as those arising under Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, and under any national implementation thereof, including any amended or successor version of such directive); and\nother similar, equivalent or corresponding rights throughout the world based on applicable law or treaty, and any national implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention of, applicable law, Affirmer hereby overtly, fully, permanently, irrevocably and unconditionally waives, abandons, and surrenders all of Affirmer’s Copyright and Related Rights and associated claims and causes of action, whether now known or unknown (including existing as well as future claims and causes of action), in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the “Waiver”). Affirmer makes the Waiver for the benefit of each member of the public at large and to the detriment of Affirmer’s heirs and successors, fully intending that such Waiver shall not be subject to revocation, rescission, cancellation, termination, or any other legal or equitable action to disrupt the quiet enjoyment of the Work by the public as contemplated by Affirmer’s express Statement of Purpose.\nPublic License Fallback. Should any part of the Waiver for any reason be judged legally invalid or ineffective under applicable law, then the Waiver shall be preserved to the maximum extent permitted taking into account Affirmer’s express Statement of Purpose. In addition, to the extent the Waiver is so judged Affirmer hereby grants to each affected person a royalty-free, non transferable, non sublicensable, non exclusive, irrevocable and unconditional license to exercise Affirmer’s Copyright and Related Rights in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the “License”). The License shall be deemed effective as of the date CC0 was applied by Affirmer to the Work. Should any part of the License for any reason be judged legally invalid or ineffective under applicable law, such partial invalidity or ineffectiveness shall not invalidate the remainder of the License, and in such case Affirmer hereby affirms that he or she will not (i) exercise any of his or her remaining Copyright and Related Rights in the Work or (ii) assert any associated claims and causes of action with respect to the Work, in either case contrary to Affirmer’s express Statement of Purpose.\nLimitations and Disclaimers.\n\nNo trademark or patent rights held by Affirmer are waived, abandoned, surrendered, licensed or otherwise affected by this document.\nAffirmer offers the Work as-is and makes no representations or warranties of any kind concerning the Work, express, implied, statutory or otherwise, including without limitation warranties of title, merchantability, fitness for a particular purpose, non infringement, or the absence of latent or other defects, accuracy, or the present or absence of errors, whether or not discoverable, all to the greatest extent permissible under applicable law.\nAffirmer disclaims responsibility for clearing rights of other persons that may apply to the Work or any use thereof, including without limitation any person’s Copyright and Related Rights in the Work. Further, Affirmer disclaims responsibility for obtaining any necessary consents, permissions or other rights required for any use of the Work.\nAffirmer understands and acknowledges that Creative Commons is not a party to this document and has no duty or obligation with respect to this CC0 or use of the Work.\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Lab Manual",
    "section": "",
    "text": "This website serves as the lab manual for the LMU Open Science Center\n\n\n\n Back to top",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "about/page2.html",
    "href": "about/page2.html",
    "title": "Page Title Here",
    "section": "",
    "text": "The headers below cause the table of contents/dropdown on the right to be visible.",
    "crumbs": [
      "Home",
      "About",
      "TOPIC1 Page2 Title"
    ]
  },
  {
    "objectID": "about/page2.html#level-two",
    "href": "about/page2.html#level-two",
    "title": "Page Title Here",
    "section": "Level Two",
    "text": "Level Two\n\nL3\n\n\nL3 Again\n\n\nAnd one more time",
    "crumbs": [
      "Home",
      "About",
      "TOPIC1 Page2 Title"
    ]
  },
  {
    "objectID": "about/page2.html#another-level-two",
    "href": "about/page2.html#another-level-two",
    "title": "Page Title Here",
    "section": "Another Level Two",
    "text": "Another Level Two",
    "crumbs": [
      "Home",
      "About",
      "TOPIC1 Page2 Title"
    ]
  },
  {
    "objectID": "about/page2.html#level-two-1",
    "href": "about/page2.html#level-two-1",
    "title": "Page Title Here",
    "section": "Level Two",
    "text": "Level Two",
    "crumbs": [
      "Home",
      "About",
      "TOPIC1 Page2 Title"
    ]
  },
  {
    "objectID": "authoring_tutorials/best_practices.html",
    "href": "authoring_tutorials/best_practices.html",
    "title": "Best Practices",
    "section": "",
    "text": "Back to top",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Best Practices"
    ]
  },
  {
    "objectID": "authoring_tutorials/introduction.html",
    "href": "authoring_tutorials/introduction.html",
    "title": "Introduction",
    "section": "",
    "text": "Welcome! This section of the manual is dedicated to the procedures for creating a new tutorial hosted via our GitHub organization. The following chapters will introduce you to the basics of the lmu-osc/tutorial-template which standardizes the design of our websites, the licensing, the citation styles used, and more to provide a coherent structure across our growing catalogue of tutorials. In particular, the chapters are organized as follows:\n\nTutorial Template Overview introduces the major files and folders in the tutorial, and briefly describes the purpose of each of them.\nThings You Shouldn’t Change provides some warnings about files that should only be changed in extenuating circumstances, and how to go about doing so.\nGetting Started outlines the technical steps needed to get started with a new tutorial\nMatomo Analytics discusses our website data analytics tool, and how to include the necessary tracking code in the website.\nAuthoring and Versions covers in greater detail when and how to make updates to your project, with particular attention paid to GitHub releases and versioning of the project.\nBest Practices discusses some best practices when developing your tutorial. These are largely recommendations. (Chapter not developed yet–questioning content.)\n\n\n\n\n\n\n\nNote on Authoring Practices, Writing Style, and Formatting\n\n\n\nWe do not prescribe how or what tutorial authors should write, obviously as long as content is within the scope of the tutorial topic.\nFeel free to stylize your content to your liking, and take advantage of Quarto features, Markdown features, and code embedded in the documents as your see fit.\nYou can, as always, tag an OSC member for review or help in pull requests or issues!\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Introduction"
    ]
  },
  {
    "objectID": "authoring_tutorials/matomo_analytics.html",
    "href": "authoring_tutorials/matomo_analytics.html",
    "title": "Matomo Analytics",
    "section": "",
    "text": "Warning\n\n\n\nThis procedure is still a work in-progress, and is not yet live.\nMatomo is a privacy-focused, self-hosted web analytics tool that allows us to get an idea of how much each of our tutorials are being used, where they’re being accessed from (rough geographic area), and from where people are being linked to our websites (e.g. directly from other LMU OSC websites, or from other sites that link to us.) At the end of the day, these analytics are useful for us in 1) improving the sites to see which sites have more/less traffic than expected and 2) quantify the utility of our sites for grant purposes.",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Matomo Analytics"
    ]
  },
  {
    "objectID": "authoring_tutorials/matomo_analytics.html#generating-matomo-code",
    "href": "authoring_tutorials/matomo_analytics.html#generating-matomo-code",
    "title": "Matomo Analytics",
    "section": "Generating Matomo Code",
    "text": "Generating Matomo Code\nIf you are one of the “superusers” of our Matomo instance, you can generate code with the following steps:\n\nLog in at www.analytics.osc.lmu.de\nPress “All Websites” and then “Add a new website”\nOur websites are not intranet sites so select “Website”\nFill out the page with the following information\n\nName: the tutorial title\nURL: the GitHub Pages site link\n\nSave the configuration\nClick “View tracking code” for the tutorial. Make sure you select the correct tutorial from the list!  \nCopy the tracking code\nSend the tracking code back to the requestor, and remind them to place it in the matomo_analytics.html file as is.\n\nAlternatively, you can just open a pull request in their repo",
    "crumbs": [
      "Home",
      "Authoring Tutorials",
      "Matomo Analytics"
    ]
  },
  {
    "objectID": "github/osc_resource_repos.html",
    "href": "github/osc_resource_repos.html",
    "title": "OSC Resource & Branding Repos",
    "section": "",
    "text": "Back to top",
    "crumbs": [
      "Home",
      "GitHub Organization",
      "Resource Repos"
    ]
  },
  {
    "objectID": "github/customizations.html#publishing-workflow-for-the-tutorials",
    "href": "github/customizations.html#publishing-workflow-for-the-tutorials",
    "title": "OSC GitHub Org Customizations",
    "section": "Publishing Workflow for the Tutorials",
    "text": "Publishing Workflow for the Tutorials",
    "crumbs": [
      "Home",
      "GitHub Organization",
      "Our Customizations"
    ]
  },
  {
    "objectID": "github/customizations.html#projects-task-assignment",
    "href": "github/customizations.html#projects-task-assignment",
    "title": "OSC GitHub Org Customizations",
    "section": "Projects Task Assignment",
    "text": "Projects Task Assignment",
    "crumbs": [
      "Home",
      "GitHub Organization",
      "Our Customizations"
    ]
  },
  {
    "objectID": "github/osc_repos.html",
    "href": "github/osc_repos.html",
    "title": "OSC Repos",
    "section": "",
    "text": "Back to top",
    "crumbs": [
      "Home",
      "GitHub Organization",
      "Repositories Overview"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Contributors\nThis site was authored by AUTHORS, and edits/contributions were made by EDITORS/AUTHORS.\n\n\nLicenses\nThe overall project is licensed under the CC BY-SA 4.0 license found at LICENSE; all code snippets are additionally licensed under the CC0 1.0 Universal license found at LICENSE-CODE.\nWhy two licenses? The CC BY-SA 4.0 license is for the content of the website, while the CC0 1.0 Universal license is for the code and configuration files. This is a common practice for websites that include code snippets and other content that may be reused in other projects, particularly because the CC BY-SA 4.0 license is not intended to be used with software.\n\n\nNotes\nThis tutorial was primarily written in YYYY using SOFTWARE-NAME SOFTWARE-VERSION. Major changes to the SOFTWARE-NAME can be found at the package’s website for the most up-to-date information, and to confirm that our tutorial is not out-of-date.\n\n\n\n\n Back to topCitationBibTeX citation:@online{1,\n  author = {1, AUTHOR and 2, AUTHOR},\n  title = {TITLE {HERE}},\n  date = {},\n  url = {https://lmu-osc.github.io/introduction-to-renv},\n  doi = {DOI HERE},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n1, AUTHOR, and AUTHOR 2. n.d. “TITLE HERE.” LMU Open\nScience Center. https://doi.org/DOI\nHERE."
  },
  {
    "objectID": "lrz_gitlab/page1.html",
    "href": "lrz_gitlab/page1.html",
    "title": "Page Title Here",
    "section": "",
    "text": "The headers below cause the table of contents/dropdown on the right to be visible."
  },
  {
    "objectID": "lrz_gitlab/page1.html#level-two",
    "href": "lrz_gitlab/page1.html#level-two",
    "title": "Page Title Here",
    "section": "Level Two",
    "text": "Level Two\n\nL3\n\n\nL3 Again\n\n\nAnd one more time"
  },
  {
    "objectID": "lrz_gitlab/page1.html#another-level-two",
    "href": "lrz_gitlab/page1.html#another-level-two",
    "title": "Page Title Here",
    "section": "Another Level Two",
    "text": "Another Level Two"
  },
  {
    "objectID": "lrz_gitlab/page1.html#level-two-1",
    "href": "lrz_gitlab/page1.html#level-two-1",
    "title": "Page Title Here",
    "section": "Level Two",
    "text": "Level Two"
  },
  {
    "objectID": "new_staff/page2.html",
    "href": "new_staff/page2.html",
    "title": "Page Title Here",
    "section": "",
    "text": "The headers below cause the table of contents/dropdown on the right to be visible.",
    "crumbs": [
      "Home",
      "Staff Onboarding",
      "TOPIC2 Page2 Title"
    ]
  },
  {
    "objectID": "new_staff/page2.html#level-two",
    "href": "new_staff/page2.html#level-two",
    "title": "Page Title Here",
    "section": "Level Two",
    "text": "Level Two\n\nL3\n\n\nL3 Again\n\n\nAnd one more time",
    "crumbs": [
      "Home",
      "Staff Onboarding",
      "TOPIC2 Page2 Title"
    ]
  },
  {
    "objectID": "new_staff/page2.html#another-level-two",
    "href": "new_staff/page2.html#another-level-two",
    "title": "Page Title Here",
    "section": "Another Level Two",
    "text": "Another Level Two",
    "crumbs": [
      "Home",
      "Staff Onboarding",
      "TOPIC2 Page2 Title"
    ]
  },
  {
    "objectID": "new_staff/page2.html#level-two-1",
    "href": "new_staff/page2.html#level-two-1",
    "title": "Page Title Here",
    "section": "Level Two",
    "text": "Level Two",
    "crumbs": [
      "Home",
      "Staff Onboarding",
      "TOPIC2 Page2 Title"
    ]
  }
]